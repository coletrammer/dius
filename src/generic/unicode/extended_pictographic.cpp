// This file was generated automatically by unicode.py

#include "dius/unicode/extended_pictographic.h"

#include "dius/unicode/property_range.h"

namespace dius::unicode {
using R = PropertyRange<ExtendedPictographic>;
using enum ExtendedPictographic;
constexpr static auto s_ranges = di::Array {
    R(0xa9, 0xaa, Yes),       R(0xae, 0xaf, Yes),       R(0x203c, 0x203d, Yes),   R(0x2049, 0x204a, Yes),
    R(0x2122, 0x2123, Yes),   R(0x2139, 0x213a, Yes),   R(0x2194, 0x219a, Yes),   R(0x21a9, 0x21ab, Yes),
    R(0x231a, 0x231c, Yes),   R(0x2328, 0x2329, Yes),   R(0x2388, 0x2389, Yes),   R(0x23cf, 0x23d0, Yes),
    R(0x23e9, 0x23f4, Yes),   R(0x23f8, 0x23fb, Yes),   R(0x24c2, 0x24c3, Yes),   R(0x25aa, 0x25ac, Yes),
    R(0x25b6, 0x25b7, Yes),   R(0x25c0, 0x25c1, Yes),   R(0x25fb, 0x25ff, Yes),   R(0x2600, 0x2606, Yes),
    R(0x2607, 0x2613, Yes),   R(0x2614, 0x2686, Yes),   R(0x2690, 0x2706, Yes),   R(0x2708, 0x2713, Yes),
    R(0x2714, 0x2715, Yes),   R(0x2716, 0x2717, Yes),   R(0x271d, 0x271e, Yes),   R(0x2721, 0x2722, Yes),
    R(0x2728, 0x2729, Yes),   R(0x2733, 0x2735, Yes),   R(0x2744, 0x2745, Yes),   R(0x2747, 0x2748, Yes),
    R(0x274c, 0x274d, Yes),   R(0x274e, 0x274f, Yes),   R(0x2753, 0x2756, Yes),   R(0x2757, 0x2758, Yes),
    R(0x2763, 0x2768, Yes),   R(0x2795, 0x2798, Yes),   R(0x27a1, 0x27a2, Yes),   R(0x27b0, 0x27b1, Yes),
    R(0x27bf, 0x27c0, Yes),   R(0x2934, 0x2936, Yes),   R(0x2b05, 0x2b08, Yes),   R(0x2b1b, 0x2b1d, Yes),
    R(0x2b50, 0x2b51, Yes),   R(0x2b55, 0x2b56, Yes),   R(0x3030, 0x3031, Yes),   R(0x303d, 0x303e, Yes),
    R(0x3297, 0x3298, Yes),   R(0x3299, 0x329a, Yes),   R(0x1f000, 0x1f100, Yes), R(0x1f10d, 0x1f110, Yes),
    R(0x1f12f, 0x1f130, Yes), R(0x1f16c, 0x1f172, Yes), R(0x1f17e, 0x1f180, Yes), R(0x1f18e, 0x1f18f, Yes),
    R(0x1f191, 0x1f19b, Yes), R(0x1f1ad, 0x1f1e6, Yes), R(0x1f201, 0x1f210, Yes), R(0x1f21a, 0x1f21b, Yes),
    R(0x1f22f, 0x1f230, Yes), R(0x1f232, 0x1f23b, Yes), R(0x1f23c, 0x1f240, Yes), R(0x1f249, 0x1f3fb, Yes),
    R(0x1f400, 0x1f53e, Yes), R(0x1f546, 0x1f650, Yes), R(0x1f680, 0x1f700, Yes), R(0x1f774, 0x1f780, Yes),
    R(0x1f7d5, 0x1f800, Yes), R(0x1f80c, 0x1f810, Yes), R(0x1f848, 0x1f850, Yes), R(0x1f85a, 0x1f860, Yes),
    R(0x1f888, 0x1f890, Yes), R(0x1f8ae, 0x1f900, Yes), R(0x1f90c, 0x1f93b, Yes), R(0x1f93c, 0x1f946, Yes),
    R(0x1f947, 0x1fb00, Yes), R(0x1fc00, 0x1fffe, Yes),
};

namespace detail {
    auto extended_pictographic_ranges() -> di::Span<PropertyRange<ExtendedPictographic> const> {
        return s_ranges;
    }
}
}
