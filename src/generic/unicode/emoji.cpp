// This file was generated automatically by unicode.py

#include "dius/unicode/emoji.h"

#include "dius/unicode/property_range.h"

namespace dius::unicode {
using R = PropertyRange<Emoji>;
using enum Emoji;
constexpr static auto s_ranges = di::Array {
    R(0x23, 0x24, Yes),       R(0x2a, 0x2b, Yes),       R(0x30, 0x3a, Yes),       R(0xa9, 0xaa, Yes),
    R(0xae, 0xaf, Yes),       R(0x203c, 0x203d, Yes),   R(0x2049, 0x204a, Yes),   R(0x2122, 0x2123, Yes),
    R(0x2139, 0x213a, Yes),   R(0x2194, 0x219a, Yes),   R(0x21a9, 0x21ab, Yes),   R(0x231a, 0x231c, Yes),
    R(0x2328, 0x2329, Yes),   R(0x23cf, 0x23d0, Yes),   R(0x23e9, 0x23f4, Yes),   R(0x23f8, 0x23fb, Yes),
    R(0x24c2, 0x24c3, Yes),   R(0x25aa, 0x25ac, Yes),   R(0x25b6, 0x25b7, Yes),   R(0x25c0, 0x25c1, Yes),
    R(0x25fb, 0x25ff, Yes),   R(0x2600, 0x2605, Yes),   R(0x260e, 0x260f, Yes),   R(0x2611, 0x2612, Yes),
    R(0x2614, 0x2616, Yes),   R(0x2618, 0x2619, Yes),   R(0x261d, 0x261e, Yes),   R(0x2620, 0x2621, Yes),
    R(0x2622, 0x2624, Yes),   R(0x2626, 0x2627, Yes),   R(0x262a, 0x262b, Yes),   R(0x262e, 0x2630, Yes),
    R(0x2638, 0x263b, Yes),   R(0x2640, 0x2641, Yes),   R(0x2642, 0x2643, Yes),   R(0x2648, 0x2654, Yes),
    R(0x265f, 0x2661, Yes),   R(0x2663, 0x2664, Yes),   R(0x2665, 0x2667, Yes),   R(0x2668, 0x2669, Yes),
    R(0x267b, 0x267c, Yes),   R(0x267e, 0x2680, Yes),   R(0x2692, 0x2698, Yes),   R(0x2699, 0x269a, Yes),
    R(0x269b, 0x269d, Yes),   R(0x26a0, 0x26a2, Yes),   R(0x26a7, 0x26a8, Yes),   R(0x26aa, 0x26ac, Yes),
    R(0x26b0, 0x26b2, Yes),   R(0x26bd, 0x26bf, Yes),   R(0x26c4, 0x26c6, Yes),   R(0x26c8, 0x26c9, Yes),
    R(0x26ce, 0x26d0, Yes),   R(0x26d1, 0x26d2, Yes),   R(0x26d3, 0x26d5, Yes),   R(0x26e9, 0x26eb, Yes),
    R(0x26f0, 0x26f6, Yes),   R(0x26f7, 0x26fb, Yes),   R(0x26fd, 0x26fe, Yes),   R(0x2702, 0x2703, Yes),
    R(0x2705, 0x2706, Yes),   R(0x2708, 0x270e, Yes),   R(0x270f, 0x2710, Yes),   R(0x2712, 0x2713, Yes),
    R(0x2714, 0x2715, Yes),   R(0x2716, 0x2717, Yes),   R(0x271d, 0x271e, Yes),   R(0x2721, 0x2722, Yes),
    R(0x2728, 0x2729, Yes),   R(0x2733, 0x2735, Yes),   R(0x2744, 0x2745, Yes),   R(0x2747, 0x2748, Yes),
    R(0x274c, 0x274d, Yes),   R(0x274e, 0x274f, Yes),   R(0x2753, 0x2756, Yes),   R(0x2757, 0x2758, Yes),
    R(0x2763, 0x2765, Yes),   R(0x2795, 0x2798, Yes),   R(0x27a1, 0x27a2, Yes),   R(0x27b0, 0x27b1, Yes),
    R(0x27bf, 0x27c0, Yes),   R(0x2934, 0x2936, Yes),   R(0x2b05, 0x2b08, Yes),   R(0x2b1b, 0x2b1d, Yes),
    R(0x2b50, 0x2b51, Yes),   R(0x2b55, 0x2b56, Yes),   R(0x3030, 0x3031, Yes),   R(0x303d, 0x303e, Yes),
    R(0x3297, 0x3298, Yes),   R(0x3299, 0x329a, Yes),   R(0x1f004, 0x1f005, Yes), R(0x1f0cf, 0x1f0d0, Yes),
    R(0x1f170, 0x1f172, Yes), R(0x1f17e, 0x1f180, Yes), R(0x1f18e, 0x1f18f, Yes), R(0x1f191, 0x1f19b, Yes),
    R(0x1f1e6, 0x1f200, Yes), R(0x1f201, 0x1f203, Yes), R(0x1f21a, 0x1f21b, Yes), R(0x1f22f, 0x1f230, Yes),
    R(0x1f232, 0x1f23b, Yes), R(0x1f250, 0x1f252, Yes), R(0x1f300, 0x1f322, Yes), R(0x1f324, 0x1f394, Yes),
    R(0x1f396, 0x1f398, Yes), R(0x1f399, 0x1f39c, Yes), R(0x1f39e, 0x1f3f1, Yes), R(0x1f3f3, 0x1f3f6, Yes),
    R(0x1f3f7, 0x1f4fe, Yes), R(0x1f4ff, 0x1f53e, Yes), R(0x1f549, 0x1f54f, Yes), R(0x1f550, 0x1f568, Yes),
    R(0x1f56f, 0x1f571, Yes), R(0x1f573, 0x1f57b, Yes), R(0x1f587, 0x1f588, Yes), R(0x1f58a, 0x1f58e, Yes),
    R(0x1f590, 0x1f591, Yes), R(0x1f595, 0x1f597, Yes), R(0x1f5a4, 0x1f5a6, Yes), R(0x1f5a8, 0x1f5a9, Yes),
    R(0x1f5b1, 0x1f5b3, Yes), R(0x1f5bc, 0x1f5bd, Yes), R(0x1f5c2, 0x1f5c5, Yes), R(0x1f5d1, 0x1f5d4, Yes),
    R(0x1f5dc, 0x1f5df, Yes), R(0x1f5e1, 0x1f5e2, Yes), R(0x1f5e3, 0x1f5e4, Yes), R(0x1f5e8, 0x1f5e9, Yes),
    R(0x1f5ef, 0x1f5f0, Yes), R(0x1f5f3, 0x1f5f4, Yes), R(0x1f5fa, 0x1f650, Yes), R(0x1f680, 0x1f6c6, Yes),
    R(0x1f6cb, 0x1f6d3, Yes), R(0x1f6d5, 0x1f6d8, Yes), R(0x1f6dc, 0x1f6e6, Yes), R(0x1f6e9, 0x1f6ea, Yes),
    R(0x1f6eb, 0x1f6ed, Yes), R(0x1f6f0, 0x1f6f1, Yes), R(0x1f6f3, 0x1f6fd, Yes), R(0x1f7e0, 0x1f7ec, Yes),
    R(0x1f7f0, 0x1f7f1, Yes), R(0x1f90c, 0x1f93b, Yes), R(0x1f93c, 0x1f946, Yes), R(0x1f947, 0x1fa00, Yes),
    R(0x1fa70, 0x1fa7d, Yes), R(0x1fa80, 0x1fa8a, Yes), R(0x1fa8f, 0x1fac7, Yes), R(0x1face, 0x1fadd, Yes),
    R(0x1fadf, 0x1faea, Yes), R(0x1faf0, 0x1faf9, Yes),
};

namespace detail {
    auto emoji_ranges() -> di::Span<PropertyRange<Emoji> const> {
        return s_ranges;
    }
}
}
