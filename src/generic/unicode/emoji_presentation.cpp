// This file was generated automatically by unicode.py

#include "dius/unicode/emoji_presentation.h"

#include "dius/unicode/property_range.h"

namespace dius::unicode {
using R = PropertyRange<EmojiPresentation>;
using enum EmojiPresentation;
constexpr static auto s_ranges = di::Array {
    R(0x231a, 0x231c, Yes),   R(0x23e9, 0x23ed, Yes),   R(0x23f0, 0x23f1, Yes),   R(0x23f3, 0x23f4, Yes),
    R(0x25fd, 0x25ff, Yes),   R(0x2614, 0x2616, Yes),   R(0x2648, 0x2654, Yes),   R(0x267f, 0x2680, Yes),
    R(0x2693, 0x2694, Yes),   R(0x26a1, 0x26a2, Yes),   R(0x26aa, 0x26ac, Yes),   R(0x26bd, 0x26bf, Yes),
    R(0x26c4, 0x26c6, Yes),   R(0x26ce, 0x26cf, Yes),   R(0x26d4, 0x26d5, Yes),   R(0x26ea, 0x26eb, Yes),
    R(0x26f2, 0x26f4, Yes),   R(0x26f5, 0x26f6, Yes),   R(0x26fa, 0x26fb, Yes),   R(0x26fd, 0x26fe, Yes),
    R(0x2705, 0x2706, Yes),   R(0x270a, 0x270c, Yes),   R(0x2728, 0x2729, Yes),   R(0x274c, 0x274d, Yes),
    R(0x274e, 0x274f, Yes),   R(0x2753, 0x2756, Yes),   R(0x2757, 0x2758, Yes),   R(0x2795, 0x2798, Yes),
    R(0x27b0, 0x27b1, Yes),   R(0x27bf, 0x27c0, Yes),   R(0x2b1b, 0x2b1d, Yes),   R(0x2b50, 0x2b51, Yes),
    R(0x2b55, 0x2b56, Yes),   R(0x1f004, 0x1f005, Yes), R(0x1f0cf, 0x1f0d0, Yes), R(0x1f18e, 0x1f18f, Yes),
    R(0x1f191, 0x1f19b, Yes), R(0x1f1e6, 0x1f200, Yes), R(0x1f201, 0x1f202, Yes), R(0x1f21a, 0x1f21b, Yes),
    R(0x1f22f, 0x1f230, Yes), R(0x1f232, 0x1f237, Yes), R(0x1f238, 0x1f23b, Yes), R(0x1f250, 0x1f252, Yes),
    R(0x1f300, 0x1f321, Yes), R(0x1f32d, 0x1f336, Yes), R(0x1f337, 0x1f37d, Yes), R(0x1f37e, 0x1f394, Yes),
    R(0x1f3a0, 0x1f3cb, Yes), R(0x1f3cf, 0x1f3d4, Yes), R(0x1f3e0, 0x1f3f1, Yes), R(0x1f3f4, 0x1f3f5, Yes),
    R(0x1f3f8, 0x1f43f, Yes), R(0x1f440, 0x1f441, Yes), R(0x1f442, 0x1f4fd, Yes), R(0x1f4ff, 0x1f53e, Yes),
    R(0x1f54b, 0x1f54f, Yes), R(0x1f550, 0x1f568, Yes), R(0x1f57a, 0x1f57b, Yes), R(0x1f595, 0x1f597, Yes),
    R(0x1f5a4, 0x1f5a5, Yes), R(0x1f5fb, 0x1f650, Yes), R(0x1f680, 0x1f6c6, Yes), R(0x1f6cc, 0x1f6cd, Yes),
    R(0x1f6d0, 0x1f6d3, Yes), R(0x1f6d5, 0x1f6d8, Yes), R(0x1f6dc, 0x1f6e0, Yes), R(0x1f6eb, 0x1f6ed, Yes),
    R(0x1f6f4, 0x1f6fd, Yes), R(0x1f7e0, 0x1f7ec, Yes), R(0x1f7f0, 0x1f7f1, Yes), R(0x1f90c, 0x1f93b, Yes),
    R(0x1f93c, 0x1f946, Yes), R(0x1f947, 0x1fa00, Yes), R(0x1fa70, 0x1fa7d, Yes), R(0x1fa80, 0x1fa8a, Yes),
    R(0x1fa8f, 0x1fac7, Yes), R(0x1face, 0x1fadd, Yes), R(0x1fadf, 0x1faea, Yes), R(0x1faf0, 0x1faf9, Yes),
};

namespace detail {
    auto emoji_presentation_ranges() -> di::Span<PropertyRange<EmojiPresentation> const> {
        return s_ranges;
    }
}
}
